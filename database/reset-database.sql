-- Reset database script
-- This will drop and recreate the projects table with the correct schema

-- Drop existing table and related objects
DROP TRIGGER IF EXISTS UPDATE_PROJECTS_UPDATED_AT ON PROJECTS;

DROP TRIGGER IF EXISTS UPDATE_PROJECTS_UPDATED_AT ON PROJECTS;

DROP TRIGGER IF EXISTS UPDATE_PROJECTS_UPDATED_AT ON PROJECTS;

DROP FUNCTION IF EXISTS UPDATE_UPDATED_AT_COLUMN();

DROP FUNCTION IF EXISTS UPDATE_UPDATED_AT_COLUMN();

DROP POLICY IF EXISTS "Allow all operations" ON PROJECTS;

DROP POLICY IF EXISTS "Allow all operations" ON PROJECTS;

DROP TABLE IF EXISTS PROJECTS;

DROP TABLE IF EXISTS PROJECTS;

-- Drop indexes if they exist
DROP INDEX IF EXISTS IDX_PROJECTS_STATUS;

DROP INDEX IF EXISTS IDX_PROJECTS_FEATURED;

DROP INDEX IF EXISTS IDX_PROJECTS_ORDER;

DROP INDEX IF EXISTS IDX_PROJECTS_CREATED_AT;

DROP INDEX IF EXISTS IDX_PROJECTS_STATUS;

DROP INDEX IF EXISTS IDX_PROJECTS_FEATURED;

DROP INDEX IF EXISTS IDX_PROJECTS_ORDER;

DROP INDEX IF EXISTS IDX_PROJECTS_CREATED_AT;

-- Now run the schema.sql content
-- Create projects table
CREATE TABLE IF NOT EXISTS PROJECTS (
    ID UUID DEFAULT GEN_RANDOM_UUID() PRIMARY KEY,
    TITLE VARCHAR(255) NOT NULL,
    DESCRIPTION TEXT NOT NULL,
    IMAGE VARCHAR(500) NOT NULL,
    TAGS TEXT[] NOT NULL DEFAULT '{}',
    STATUS VARCHAR(20) NOT NULL DEFAULT 'draft' CHECK (STATUS IN ('draft', 'published', 'archived')),
    FEATURED BOOLEAN NOT NULL DEFAULT FALSE,
    "order" INTEGER NOT NULL DEFAULT 0,
    CLIENT VARCHAR(255),
    CATEGORY VARCHAR(100),
    TECHNOLOGIES TEXT[] DEFAULT '{}',
    LIVE_URL VARCHAR(500),
    GITHUB_URL VARCHAR(500),
    CASE_STUDY TEXT,
    CREATED_AT TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    UPDATED_AT TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Create index for better performance
CREATE INDEX IF NOT EXISTS IDX_PROJECTS_STATUS ON PROJECTS(STATUS);

CREATE INDEX IF NOT EXISTS IDX_PROJECTS_FEATURED ON PROJECTS(FEATURED);

CREATE INDEX IF NOT EXISTS IDX_PROJECTS_ORDER ON PROJECTS("order");

CREATE INDEX IF NOT EXISTS IDX_PROJECTS_CREATED_AT ON PROJECTS(CREATED_AT);

-- Enable Row Level Security (RLS)
ALTER TABLE PROJECTS ENABLE ROW LEVEL SECURITY;

-- Create policy to allow all operations (you can restrict this later)
CREATE POLICY "Allow all operations" ON PROJECTS
  FOR ALL USING (TRUE);

-- Create function to update updated_at timestamp
CREATE OR REPLACE FUNCTION UPDATE_UPDATED_AT_COLUMN(
) RETURNS TRIGGER AS
    $$     BEGIN NEW.UPDATED_AT = NOW();
    RETURN NEW;
END;
$$     LANGUAGE 'plpgsql';
 
-- Create trigger to automatically update updated_at
CREATE TRIGGER UPDATE_PROJECTS_UPDATED_AT BEFORE UPDATE ON PROJECTS FOR EACH ROW EXECUTE

FUNCTION UPDATE_UPDATED_AT_COLUMN(
);